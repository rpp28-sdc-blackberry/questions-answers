# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1


jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/node
    docker:
      - image: cimg/node:15.1
        environment:
          NODE_ENV: test
          TEST_DATABASE_URL: postgresql://postgres@localhost/reviews_test
          POSTGRES_DB: reviews_test
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_DB: reviews_test

    steps:
      # Checkout the code as the first step.
      - checkout
      - run: sudo apt-get update && sudo apt-get install postgresql-client
      - run:
          name: Create reviews table
          command: psql \
                  -d $TEST_DATABASE_URL \
                  -c "CREATE TABLE reviews (
                      id SERIAL PRIMARY KEY,
                      product_id INT NOT NULL,
                      rating INT NOT NULL,
                      date TIMESTAMP NOT NULL,
                      summary VARCHAR (255) NOT NULL,
                      body TEXT NOT NULL,
                      recommend BOOLEAN NOT NULL,
                      reported BOOLEAN NOT NULL DEFAULT false,
                      reviewer_name VARCHAR (255) NOT NULL,
                      reviewer_email VARCHAR (255) NOT NULL,
                      response VARCHAR (1000),
                      helpfulness INT NOT NULL DEFAULT 0
                    );"

      - run:
          name: Create photos table
          command: psql \
                  -d $TEST_DATABASE_URL \
                  -c "CREATE TABLE photos (
                      id SERIAL PRIMARY KEY,
                      review_id INT NOT NULL REFERENCES reviews(id),
                      url TEXT NOT NULL
                    );"

      - run:
          name: Create characteristics table
          command: psql \
                  -d $TEST_DATABASE_URL \
                  -c "CREATE TABLE characteristics (
                      id SERIAL PRIMARY KEY,
                      product_id INT NOT NULL,
                      name VARCHAR (255) NOT NULL
                    );"

      - run:
          name: Create characteristics_reviews table
          command: psql \
                  -d $TEST_DATABASE_URL \
                  -c "CREATE TABLE characteristics_reviews (
                      id SERIAL PRIMARY KEY,
                      characteristic_id INT NOT NULL REFERENCES characteristics(id),
                      review_id INT NOT NULL REFERENCES reviews(id),
                      value INT NOT NULL
                    );"

      # Next, the node orb's install-packages step will install the dependencies from a package.json.
      # The orb install-packages step will also automatically cache them for faster future runs.
      - node/install-packages
      # If you are using yarn instead npm, remove the line above and uncomment the two lines below.
      # - node/install-packages:
      #     pkg-manager: yarn

      - run:
          name: Run tests
          command: npm test

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample:
    jobs:
      - build-and-test
      # For running simple node tests, you could optionally use the node/test job from the orb to replicate and replace the job above in fewer lines.
      # - node/test
